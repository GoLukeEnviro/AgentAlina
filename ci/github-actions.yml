name: CI/CD Pipeline for Agent Alina

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Lint Code
      run: |
        docker run --rm -v $(pwd):/app -w /app python:3.10-slim bash -c "pip install flake8 && flake8 ./services/*/src/*.py"
    
    - name: Build Ollama Models
      run: |
        docker run --rm -v $(pwd):/app -w /app ollama/ollama bash -c "ollama pull ollama-gptq-v1 && ollama build ollama-gptq-v1 --quantize 4"
    
    - name: Build Docker Images
      run: |
        docker-compose -f ./docker/docker-compose.yml build
    
    - name: Run Tests
      run: |
        docker-compose -f ./docker/docker-compose.yml run --rm toolloader pytest
        docker-compose -f ./docker/docker-compose.yml run --rm memory pytest
        docker-compose -f ./docker/docker-compose.yml run --rm trading pytest
        docker-compose -f ./docker/docker-compose.yml run --rm monitor pytest
        docker-compose -f ./docker/docker-compose.yml run --rm optimizer pytest
    
    - name: Push Docker Images
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker-compose -f ./docker/docker-compose.yml push

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to VPS
      env:
        VPS_HOST: ${{ secrets.VPS_HOST }}
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
      run: |
        echo "$VPS_SSH_KEY" > ssh_key
        chmod 600 ssh_key
        ssh -i ssh_key -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" << 'EOF'
          cd /opt/agent-alina
          git pull origin main
          docker-compose -f ./docker/docker-compose.yml pull
          docker-compose -f ./docker/docker-compose.yml up -d --remove-orphans
          echo "Deployment completed successfully"
        EOF
        rm ssh_key
